========> 1 <===========
to encrypt:
create file testfile.dat:
    dd if=/dev/urandom of=testfile.dat bs=2k count=1
to create non-block-aligned input:
    echo -n abc >> testfile.dat

des_encrypt
tripledes_encrypt

check files:
enc.des
des.3des

to decrypt:
des_decrypt
tripledes_decrypt

check files:
dec.des
dec.3des

md5 testfile.dat
md5 dec.des
md5 dec.3des

========> 2 <===========
OpenSSL:
encrypt with des_encrypt and tripledes_encrypt
decrypt with OpenSSL:
openssl enc -d -des -K 70617373776F7264 -iv 696E697469616C7A -out dec_openssl.des -in enc.des 
openssl enc -d -des3 -K 7477656E7479666F7572636861726163746572696E707574 -iv 696E697469616C7A -out dec_openssl.3des -in enc.3des 

md5 testfile.dat
md5 dec_openssl.des
md5 dec_openssl.3des

========> 2 <===========
encrypt with OpenSSL:
openssl enc -des -K 70617373776F7264 -iv 696E697469616C7A -out enc.des -in testfile.dat
enc -des3 -K 7477656E7479666F7572636861726163746572696E707574 -iv 696E697469616C7A -out enc.3des -in testfile.dat

decrypt with des_decrypt and tripledes_decrypt

md5 testfile.dat
md5 dec.des
md5 dec.3des

//uint64_t key = 0x70617373776F7264;
    uint64_t key =   0x0102030405060708;
    //uint64_t salt = 0x696E697469616C7A;
    uint64_t salt =   0xFFFEFDFCFBFAF9F8;
openssl enc -d -des -K 0102030405060708 -iv FFFEFDFCFBFAF9F8 -out dec_openssl.des -in enc.des 

1G file 

$ time ./des_encrypt

real	13m3.761s
user	5m0.673s
sys	7m50.740s

$ openssl enc -des -K 0102030405060708 -iv FFFEFDFCFBFAF9F8 -out enc_openssl.des -in testfile.dat 
^C
$ time openssl enc -des -K 0102030405060708 -iv FFFEFDFCFBFAF9F8 -out enc_openssl.des -in testfile.dat 

real	0m14.696s
user	0m13.107s
sys	0m1.538s

$ time ./tripledes_encrypt

real	21m28.634s
user	13m9.875s
sys	8m4.506s

$ time openssl enc -des3 -K 0102030405060708090A0B0C0D0E0F101112131415161718 -iv FFFEFDFCFBFAF9F8 -out enc_openssl.3des -in testfile.dat 

real	0m37.183s
user	0m35.480s
sys	0m1.556s

